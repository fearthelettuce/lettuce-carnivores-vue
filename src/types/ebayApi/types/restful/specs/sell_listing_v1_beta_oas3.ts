/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/item_draft/": {
    /** @description This call gives Partners the ability to create an eBay draft of a item for their seller using information from their site. This lets the Partner increase the exposure of items on their site and leverage the eBay user listing experience seamlessly. This experience provides guidance on pricing, aspects, etc. and recommendations that help create a listing that is complete and improves the exposure of the listing in search results. After the listing draft is created, the seller logs into their eBay account and uses the listing experience to finish the listing and publish the item on eBay. */
    post: operations["createItemDraft"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description The type that defines the fields for the currency and a monetary amount. */
    Amount: {
      /** @description The three-letter ISO 4217 code representing the currency of the amount in the value field. Restriction: Only the currency of the marketplace is supported. For example, on the US marketplace the only currency supported is USD. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/listing/types/bas:CurrencyCodeEnum'>eBay API documentation</a> */
      currency?: string;
      /** @description The monetary amount, in the currency specified by the currency field. */
      value?: string;
    };
    /** @description The type that defines the fields for the item aspects. */
    Aspect: {
      /** @description The name of an aspect, such and Brand. */
      name?: string;
      /** @description A list of potential values for this aspect. */
      values?: (string)[];
    };
    /** @description This type is used to identify the charitable organization that will receive a percentage of sale proceeds for each sale generated by the listing. This container also includes the donation percentage, which is the percentage of the sale proceeds that the charitable organization will get. In order to receive a percentage of the sales proceeds, the non-profit organization must be registered with the PayPal Giving Fund, which is a partner of eBay for Charity. */
    Charity: {
      /** @description This field sets the percentage of the purchase price that the charitable organization (identified in the charityId field) will receive for each sale that the listing generates. This field is conditionally required if a seller is planning on donating a percentage of the sale proceeds to a charitable organization. This numeric value can range from 10 to 100, and in any 5 (percent) increments in between this range (e.g. 10, 15, 20...95,... 100). The seller would pass in 10 for 10 percent, 15 for 15 percent, 20 for 20 percent, and so on, all the way to 100 for 100 percent. Note: For this field, createItemDraft will only validate that a positive integer value is supplied, so the listing draft will still be successfully created (with no error or warning message) if a non-supported value is specified. However, if the seller attempted to publish this listing draft with an unsupported value, the charity information would just be dropped from the listing. */
      donationPercentage?: string;
      /** @description The eBay-assigned unique identifier of the charitable organization that will receive a percentage of the sales proceeds. The charitable organization must be reqistered with the PayPal Giving Fund in order to receive sales proceeds through eBay listings. This field is conditionally required if a seller is planning on donating a percentage of the sale proceeds to a charitable organization. The eBay-assigned unique identifier of a charitable organization can be found using the GetCharities call of the Trading API. In the GetCharities call response, this unique identifier is shown in the id attribute of the Charity container. */
      charityId?: string;
    };
    /** @description This type defines the fields that can be returned in an error. */
    Error: {
      /** @description Identifies the type of erro. */
      category?: string;
      /** @description Name for the primary system where the error occurred. This is relevant for application errors. */
      domain?: string;
      /**
       * Format: int32 
       * @description A unique number to identify the error.
       */
      errorId?: number;
      /** @description An array of request elements most closely associated to the error. */
      inputRefIds?: (string)[];
      /** @description A more detailed explanation of the error. */
      longMessage?: string;
      /** @description Information on how to correct the problem, in the end user's terms and language where applicable. */
      message?: string;
      /** @description An array of request elements most closely associated to the error. */
      outputRefIds?: (string)[];
      /** @description An array of name/value pairs that describe details the error condition. These are useful when multiple errors are returned. */
      parameters?: (components["schemas"]["ErrorParameter"])[];
      /** @description Further helps indicate which subsystem the error is coming from. System subcategories include: Initialization, Serialization, Security, Monitoring, Rate Limiting, etc. */
      subdomain?: string;
    };
    ErrorParameter: {
      /** @description The object of the error. */
      name?: string;
      /** @description The value of the object. */
      value?: string;
    };
    /** @description The type that defines the fields for the listing details. */
    ItemDraft: {
      /** @description The ID of the leaf category associated with this item. A leaf category is the lowest level in that category and has no children. Note: If you submit both a category ID and an EPID, eBay determines the best category based on the EPID and uses that. The category ID will be ignored. */
      categoryId?: string;
      /** @description An enumeration value representing the condition of the item, such as NEW. Note: In all eBay marketplaces, Condition ID 2000 now maps to an item condition of 'Certified Refurbished, and not 'Manufacturer Refurbished'. To list an item as 'Certified Refurbished, a seller must be pre-qualified by eBay for this feature. Any seller who is not eligible for this feature will get an error when attempting to create an item draft with the Listing API using the 'Certified Refurbished' item condition. The other refurbished item condition that sellers can use is the 'Seller Refurbished' item condition (Condition ID 2500). Any seller that is interested in eligibility requirements to list with 'Certified Refurbished' should see the Certified refurbished program page in Seller Center. Certified refurbished program page in Seller Center. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/listing/types/api:ConditionEnum'>eBay API documentation</a> */
      condition?: string;
      /** @description The format of the listing. Valid Values: FIXED_PRICE and AUCTION For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/listing/types/api:ListingFormatEnum'>eBay API documentation</a> */
      format?: string;
      /** @description The container that for the information about the cost of an item, such as the price or auction start price. */
      pricingSummary?: components["schemas"]["PricingSummary"];
      /** @description The container for the product details of the item. */
      product?: components["schemas"]["Product"];
      /** @description This container is used to identify the charitable organization that will receive a percentage of sale proceeds for each sale generated by the listing. This container consists of the charityId field to identify the charitable organization, and the donationPercentage field that will set the percentage of the sales proceeds that will be donated to the charitable organization. */
      charity?: components["schemas"]["Charity"];
    };
    /** @description The type that defines the field for the createItemDraft response. */
    ItemDraftResponse: {
      /** @description The eBay generated ID of the listing draft. */
      itemDraftId?: string;
      /** @description The URI the Partner uses to send the seller to their listing draft that was created on the eBay site. From there the seller can change, update, and publish the item on eBay. This is returned when the seller is using a mobile app. */
      sellFlowNativeUri?: string;
      /** @description The web URL the Partner uses to send the seller to the listing draft that was created on the eBay site. From there the seller can change, update, and publish the item on eBay. This is returned when the seller is using mobile web (mweb) or the desktop web. Note: You must construct the URL using the URL returned in this field and a session token. For example: sellFlowUrl?id_token=session_token */
      sellFlowUrl?: string;
    };
    /** @description The type that defines the fields for the price details for an item. */
    PricingSummary: {
      /** @description The minimum amount the seller is willing to sell the item for. If the reserve price isn't met, the item won't be sold. For details, see How reserve prices work. Restrictions: The value is not supported for FIXED_PRICE format. The value format has a maximum of two decimal points. */
      auctionReservePrice?: components["schemas"]["Amount"];
      /** @description The minimum amount required for the first bid. Note: The auctionStartPrice value must be less than the auctionReservePrice value. Restrictions: The value is not supported for FIXED_PRICE format. The value format has a maximum of two decimal points. */
      auctionStartPrice?: components["schemas"]["Amount"];
      /** @description The Buy It Now Price for the item. */
      price?: components["schemas"]["Amount"];
    };
    /** @description The type that defines the fields for the aspects of a product. */
    Product: {
      /** @description The list of item aspects that describe the item (such as size, color, capacity, model, brand, etc.) */
      aspects?: (components["schemas"]["Aspect"])[];
      /** @description The name brand of the item, such as Nike, Apple, etc. */
      brand?: string;
      /** @description The description of the item that was created by the seller. This field supports plain text or rich content within HTML tags. Note: Active content is not supported. Active content includes animation or video via JavaScript, Flash, plug-ins, or form actions. Max Length: 500,000 */
      description?: string;
      /** @description An EPID is the eBay product identifier of a product from the eBay product catalog. Note: If you submit both a category ID and an EPID, eBay determines the best category based on the EPID and uses that. The category ID will be ignored. */
      epid?: string;
      /** @description The image URLs of the item. The first URL will be the primary image, which appears on the View Item page in the eBay listing. The URL can be from the following: The eBay Picture Services (images previously uploaded). A server outside of eBay (self-hosted). For more details, see PictureURL and Introduction to Pictures in Listings. Maximum: 12 URLs (for most categories and marketplaces) Restrictions: You cannot mix self-hosted and EPS-hosted URLs in the same listing. All image URLs must be 'https'. */
      imageUrls?: (string)[];
      /** @description The seller-created title of the item. This should include unique characteristics of the item, such as brand, model, color, size, capacity, etc. For example: Levi's 501 size 10 black jeans */
      title?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /** @description This call gives Partners the ability to create an eBay draft of a item for their seller using information from their site. This lets the Partner increase the exposure of items on their site and leverage the eBay user listing experience seamlessly. This experience provides guidance on pricing, aspects, etc. and recommendations that help create a listing that is complete and improves the exposure of the listing in search results. After the listing draft is created, the seller logs into their eBay account and uses the listing experience to finish the listing and publish the item on eBay. */
  createItemDraft: {
    parameters: {
      header: {
        /** @description Use this header to specify the natural language of the seller. For details, see Content-Language in HTTP request headers. Required: For EBAY_CA in French. (Content-Language = fr-CA) */
        "Content-Language"?: string;
        /** @description Use this header to specify an eBay marketplace ID. For a list of supported sites, see API Restrictions in the Listing API overview. */
        "X-EBAY-C-MARKETPLACE-ID": string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["ItemDraft"];
      };
    };
    responses: {
      /** @description OK */
      201: {
        content: {
          "application/json": components["schemas"]["ItemDraftResponse"];
        };
      };
      /** @description Bad Request */
      400: never;
      /** @description Internal Error */
      500: never;
    };
  };
}
