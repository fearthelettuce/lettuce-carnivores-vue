/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/casemanagement/{caseId}/appeal": {
    /** @description Buyer or seller appeals a case decision */
    post: operations["appealCaseDecision"];
  };
  "/casemanagement/{caseId}/close": {
    /** @description Buyer closes a case */
    post: operations["closeCase"];
  };
  "/casemanagement/{caseId}": {
    /** @description Retrieve the details related to a specific case */
    get: operations["getCase"];
  };
  "/casemanagement/{caseId}/issue_refund": {
    /** @description Seller issues a refund for a case */
    post: operations["issueCaseRefund"];
  };
  "/casemanagement/{caseId}/provide_shipment_info": {
    /** @description Buyer provides return shipment information */
    post: operations["provideReturnShipmentInfo"];
  };
  "/casemanagement/{caseId}/provide_return_address": {
    /** @description Seller provides a return address to the buyer */
    post: operations["providesReturnAddress"];
  };
  "/casemanagement/search": {
    /** @description This call is used to search for cases using multiple filter types. */
    get: operations["search"];
  };
}

export type webhooks = Record<string, never>;

export type components = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** @description Buyer or seller appeals a case decision */
  appealCaseDecision: {
    parameters: {
      path: {
        /** @description The unique identifier of a case. This URI parameter is required in order to identify the case for which an appeal will be filed against. The case is identified by the caseId that is passed in as part of the call URI. */
        caseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: never;
    };
  };
  /** @description Buyer closes a case */
  closeCase: {
    parameters: {
      path: {
        /** @description The unique identifier of a case. This URI parameter is required in order to identify the case for which an appeal will be filed against. The case is identified by the caseId that is passed in as part of the call URI. */
        caseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: never;
    };
  };
  /** @description Retrieve the details related to a specific case */
  getCase: {
    parameters: {
      path: {
        /** @description The unique identifier of a case. This URI parameter is required in order to identify the case for which an appeal will be filed against. The case is identified by the caseId that is passed in as part of the call URI. */
        caseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: never;
    };
  };
  /** @description Seller issues a refund for a case */
  issueCaseRefund: {
    parameters: {
      path: {
        /** @description The unique identifier of a case. This URI parameter is required in order to identify the case for which an appeal will be filed against. The case is identified by the caseId that is passed in as part of the call URI. */
        caseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: never;
    };
  };
  /** @description Buyer provides return shipment information */
  provideReturnShipmentInfo: {
    parameters: {
      path: {
        /** @description The unique identifier of a case. This URI parameter is required in order to identify the case for which an appeal will be filed against. The case is identified by the caseId that is passed in as part of the call URI. */
        caseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: never;
    };
  };
  /** @description Seller provides a return address to the buyer */
  providesReturnAddress: {
    parameters: {
      path: {
        /** @description The unique identifier of a case. This URI parameter is required in order to identify the case for which an appeal will be filed against. The case is identified by the caseId that is passed in as part of the call URI. */
        caseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: never;
    };
  };
  /** @description This call is used to search for cases using multiple filter types. */
  search: {
    responses: {
      /** @description OK */
      200: never;
    };
  };
}
